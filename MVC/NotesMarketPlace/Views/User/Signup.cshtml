@model NotesMarketPlace.Models.Signup

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatibility" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">


<!-- title -->
<title>Notes - Market Place</title>

<!-- Favicon-for icon if website title -->
<link rel="shortcut icon" href="~/img/favicon.ico">

<!-- Google Font -->
<link href="https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100;0,200;0,300;0,400;0,500;0,700;1,600&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap" rel="stylesheet">
@Styles.Render("~/Content/css")
<style>
    .error {
        color: red;
    }
</style>
</head>
<body>
    <div class="signup-background">
        <form id="signup" method="post">
            <div class="logo">
                <img src="~/img/top-logo.png">
            </div>
            <div class="form">
                <h1>Create an Account</h1>
                <p>Enter your detail to signup</p>
                @if (ViewBag.error != null)
                {
                    <p class="error" style="text-align:center;">  @ViewBag.error</p>
                }
                <div class="form-group">
                    <label>First Name *</label>
                    <div>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "FirstName" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "error" })
                    </div>
                </div>
                <div class="form-group">
                    <label>Last Name*</label>
                    <div>
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "LastName" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "error" })
                    </div>
                </div>
                <div class="form-group">
                    <label>Email *</label>
                    <div>
                        @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", @placeholder = "EmailID" } })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "error" })
                    </div>
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <div>
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @id = "password", @type = "password", @placeholder = "Password" } })
                        <span toggle="#password-field" class="fa fa-fw field-icon toggle-password" onclick="password()"><img src="~/img/eye.png"  style="margin-left:-15px;"/></span>
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "error" })
                    </div>
                </div>
                <div class="form-group">
                    <label>Confirm Password</label>
                    <div>
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @id = "confirmpassword", @type = "password", @placeholder = "ConfirmPasswoord" } })
                        <span toggle="#password-field" class="fa fa-fw field-icon toggle-password" onclick="confirmpassword()"><img src="~/img/eye.png"  style="margin-left:-15px;"/></span>
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "error" })
                    </div>
                </div>
                <button type="submit" class="btn btn-primary" value="Submit">SUBMIT</button>
                <p>Already have an account?  @Html.ActionLink("Login", "Login")</p>

            </div>
        </form>

    </div>
    @Scripts.Render("~/bundles/bootstrap")

</body>
</html>


